{"ast":null,"code":"import React from'react';import'../../pages/style.css';import{Container,Row,Col,Card,ListGroup}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var workExperience=[{title:'Graduate Researcher - Computer Vision, Chevron, CO (August 2021 - Present)',responsibilities:['Computer Vision based oil and gas site monitoring system','Developed a Transformer based model to monitor the state of flare at oil and gas sites','Worked on data cleaning and annotation for training neural networks','Created a synthetic database using Unreal Engine which could emulate different flare conditions and weather','Find the Ringelmann number of smoke coming out of flare','Trained a Swin Transformer model to identify the state of flare, achieved 96% accuracy on test set']}// Continue with other work experiences in the same format\n// ...\n];var education=['PhD in Computer Science, Colorado State University (August 2021 - Present)','M.S. in Computer Engineering, Colorado State University (August 2018 - May 2021)','B.Tech. in Electronics and Communication Engineering, Amrita Institute of Technology (July 2013 - May 2017)'];var skills=['Technical Skills : 2D/3D Object Detection & Tracking, Segmentation, Feature Detection, 3D Reconstruction, Structure from Motion, SLAM, GANs','Programming Language : C++, Python, MATLAB, CUDA','Libraries : OpenCV, ROS, PyTorch, TensorFlow, NumPy, SciPy, Scikit-learn, Pandas, Matplotlib, Apache Spark, Hadoop','Other tools : Arduino, Raspberry Pi, PyQt, QGIS, RVIZ, Git, SVN, Unreal Engine','Professional Skills : Creativity, Critical Thinking, Problem Solving, Teamwork'];var relevantCoursework=['Machine Learning, Image Computation, Big Data, Natural Language Processing, Mathematical Modeling of Large Datasets,Optimization Methods, Machine learning & Adaptive Systems, Digital Image Processing, Introduction to Computer Graphics, Introduction to Robotic Programming, Digital Signal Processing, Software Engineering, Algorithms, Operating Systems'];// You can continue to add more sections in the same format\nfunction CVPage(){return/*#__PURE__*/_jsx(\"div\",{className:\"aboutpagebackground\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{className:\"textbackground\",children:/*#__PURE__*/_jsxs(Col,{md:12,children:[/*#__PURE__*/_jsx(\"h3\",{className:\"aboutmetext\",children:\"Work Experience\"}),workExperience.map(function(job,index){return/*#__PURE__*/_jsxs(Card,{className:\"transparent-card mb-3 dynamicBox\",children:[/*#__PURE__*/_jsx(Card.Header,{children:job.title}),/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:job.responsibilities.map(function(responsibility,idx){return/*#__PURE__*/_jsx(ListGroup.Item,{className:\"transparent-card\",children:responsibility},idx);})})]},index);}),/*#__PURE__*/_jsx(\"h3\",{className:\"aboutmetext\",children:\"Education\"}),/*#__PURE__*/_jsx(Card,{className:\"transparent-card mb-3 dynamicBox\",children:/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:education.map(function(edu,index){return/*#__PURE__*/_jsx(ListGroup.Item,{className:\"transparent-card\",children:edu},index);})})})}),/*#__PURE__*/_jsx(\"h3\",{className:\"aboutmetext\",children:\"Skills\"}),/*#__PURE__*/_jsx(Card,{className:\"transparent-card mb-3 dynamicBox\",children:/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:skills.map(function(skill,index){return/*#__PURE__*/_jsx(ListGroup.Item,{className:\"transparent-card\",children:skill},index);})})})}),/*#__PURE__*/_jsx(\"h3\",{className:\"aboutmetext\",children:\"Relevant Coursework\"}),/*#__PURE__*/_jsx(Card,{className:\"transparent-card mb-3 dynamicBox\",children:/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:relevantCoursework.map(function(course,index){return/*#__PURE__*/_jsx(ListGroup.Item,{className:\"transparent-card\",children:course},index);})})})})]})})})});}export default CVPage;","map":{"version":3,"names":["React","Container","Row","Col","Card","ListGroup","jsx","_jsx","jsxs","_jsxs","workExperience","title","responsibilities","education","skills","relevantCoursework","CVPage","className","children","md","map","job","index","Header","variant","responsibility","idx","Item","edu","skill","course"],"sources":["/Users/mau5/Documents/Personal_Website/my-space/src/components/CV/CV.js"],"sourcesContent":["import React from 'react';\nimport '../../pages/style.css';\nimport { Container, Row, Col, Card, ListGroup } from 'react-bootstrap';\n\nconst workExperience = [\n  {\n    title: 'Graduate Researcher - Computer Vision, Chevron, CO (August 2021 - Present)',\n    responsibilities: [\n      'Computer Vision based oil and gas site monitoring system',\n      'Developed a Transformer based model to monitor the state of flare at oil and gas sites',\n      'Worked on data cleaning and annotation for training neural networks',\n      'Created a synthetic database using Unreal Engine which could emulate different flare conditions and weather',\n      'Find the Ringelmann number of smoke coming out of flare',\n      'Trained a Swin Transformer model to identify the state of flare, achieved 96% accuracy on test set'\n    ]\n  },\n  // Continue with other work experiences in the same format\n  // ...\n];\n\nconst education = [\n  'PhD in Computer Science, Colorado State University (August 2021 - Present)',\n  'M.S. in Computer Engineering, Colorado State University (August 2018 - May 2021)',\n  'B.Tech. in Electronics and Communication Engineering, Amrita Institute of Technology (July 2013 - May 2017)'\n];\n\nconst skills = [\n  'Technical Skills : 2D/3D Object Detection & Tracking, Segmentation, Feature Detection, 3D Reconstruction, Structure from Motion, SLAM, GANs',\n  'Programming Language : C++, Python, MATLAB, CUDA',\n  'Libraries : OpenCV, ROS, PyTorch, TensorFlow, NumPy, SciPy, Scikit-learn, Pandas, Matplotlib, Apache Spark, Hadoop',\n  'Other tools : Arduino, Raspberry Pi, PyQt, QGIS, RVIZ, Git, SVN, Unreal Engine',\n  'Professional Skills : Creativity, Critical Thinking, Problem Solving, Teamwork'\n];\n\nconst relevantCoursework = [\n  'Machine Learning, Image Computation, Big Data, Natural Language Processing, Mathematical Modeling of Large Datasets,Optimization Methods, Machine learning & Adaptive Systems, Digital Image Processing, Introduction to Computer Graphics, Introduction to Robotic Programming, Digital Signal Processing, Software Engineering, Algorithms, Operating Systems'\n];\n\n// You can continue to add more sections in the same format\n\nfunction CVPage() {\n  return (\n    <div className='aboutpagebackground'>\n      <Container>\n        <Row className='textbackground'>\n          <Col md={12}>\n            <h3 className='aboutmetext'>Work Experience</h3>\n            {workExperience.map((job, index) => (\n              <Card className=\"transparent-card mb-3 dynamicBox\" key={index}>\n                <Card.Header>{job.title}</Card.Header>\n                <ListGroup variant=\"flush\">\n                  {job.responsibilities.map((responsibility, idx) => (\n                    <ListGroup.Item className=\"transparent-card\" key={idx}>\n                      {responsibility}\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </Card>\n            ))}\n\n            <h3 className='aboutmetext'>Education</h3>\n            <Card className=\"transparent-card mb-3 dynamicBox\">\n              <Card.Header>\n                <ListGroup variant=\"flush\">\n                  {education.map((edu, index) => (\n                    <ListGroup.Item className=\"transparent-card\" key={index}>\n                      {edu}\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </Card.Header>\n            </Card>\n\n            <h3 className='aboutmetext'>Skills</h3>\n            <Card className=\"transparent-card mb-3 dynamicBox\">\n              <Card.Header>\n                <ListGroup variant=\"flush\">\n                  {skills.map((skill, index) => (\n                    <ListGroup.Item className=\"transparent-card\" key={index}>\n                      {skill}\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </Card.Header>\n            </Card>\n\n            <h3 className='aboutmetext'>Relevant Coursework</h3>\n            <Card className=\"transparent-card mb-3 dynamicBox\">\n              <Card.Header>\n                <ListGroup variant=\"flush\">\n                  {relevantCoursework.map((course, index) => (\n                    <ListGroup.Item className=\"transparent-card\" key={index}>\n                      {course}\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </Card.Header>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default CVPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,uBAAuB,CAC9B,OAASC,SAAS,CAAEC,GAAG,CAAEC,GAAG,CAAEC,IAAI,CAAEC,SAAS,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvE,GAAM,CAAAC,cAAc,CAAG,CACrB,CACEC,KAAK,CAAE,4EAA4E,CACnFC,gBAAgB,CAAE,CAChB,0DAA0D,CAC1D,wFAAwF,CACxF,qEAAqE,CACrE,6GAA6G,CAC7G,yDAAyD,CACzD,oGAAoG,CAExG,CACA;AACA;AAAA,CACD,CAED,GAAM,CAAAC,SAAS,CAAG,CAChB,4EAA4E,CAC5E,kFAAkF,CAClF,6GAA6G,CAC9G,CAED,GAAM,CAAAC,MAAM,CAAG,CACb,6IAA6I,CAC7I,kDAAkD,CAClD,oHAAoH,CACpH,gFAAgF,CAChF,gFAAgF,CACjF,CAED,GAAM,CAAAC,kBAAkB,CAAG,CACzB,iWAAiW,CAClW,CAED;AAEA,QAAS,CAAAC,MAAMA,CAAA,CAAG,CAChB,mBACET,IAAA,QAAKU,SAAS,CAAC,qBAAqB,CAAAC,QAAA,cAClCX,IAAA,CAACN,SAAS,EAAAiB,QAAA,cACRX,IAAA,CAACL,GAAG,EAACe,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7BT,KAAA,CAACN,GAAG,EAACgB,EAAE,CAAE,EAAG,CAAAD,QAAA,eACVX,IAAA,OAAIU,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,iBAAe,CAAI,CAAC,CAC/CR,cAAc,CAACU,GAAG,CAAC,SAACC,GAAG,CAAEC,KAAK,qBAC7Bb,KAAA,CAACL,IAAI,EAACa,SAAS,CAAC,kCAAkC,CAAAC,QAAA,eAChDX,IAAA,CAACH,IAAI,CAACmB,MAAM,EAAAL,QAAA,CAAEG,GAAG,CAACV,KAAK,CAAc,CAAC,cACtCJ,IAAA,CAACF,SAAS,EAACmB,OAAO,CAAC,OAAO,CAAAN,QAAA,CACvBG,GAAG,CAACT,gBAAgB,CAACQ,GAAG,CAAC,SAACK,cAAc,CAAEC,GAAG,qBAC5CnB,IAAA,CAACF,SAAS,CAACsB,IAAI,EAACV,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CACzCO,cAAc,EADiCC,GAElC,CAAC,EAClB,CAAC,CACO,CAAC,GAR0CJ,KASlD,CAAC,EACR,CAAC,cAEFf,IAAA,OAAIU,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,WAAS,CAAI,CAAC,cAC1CX,IAAA,CAACH,IAAI,EAACa,SAAS,CAAC,kCAAkC,CAAAC,QAAA,cAChDX,IAAA,CAACH,IAAI,CAACmB,MAAM,EAAAL,QAAA,cACVX,IAAA,CAACF,SAAS,EAACmB,OAAO,CAAC,OAAO,CAAAN,QAAA,CACvBL,SAAS,CAACO,GAAG,CAAC,SAACQ,GAAG,CAAEN,KAAK,qBACxBf,IAAA,CAACF,SAAS,CAACsB,IAAI,EAACV,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CACzCU,GAAG,EAD4CN,KAElC,CAAC,EAClB,CAAC,CACO,CAAC,CACD,CAAC,CACV,CAAC,cAEPf,IAAA,OAAIU,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,QAAM,CAAI,CAAC,cACvCX,IAAA,CAACH,IAAI,EAACa,SAAS,CAAC,kCAAkC,CAAAC,QAAA,cAChDX,IAAA,CAACH,IAAI,CAACmB,MAAM,EAAAL,QAAA,cACVX,IAAA,CAACF,SAAS,EAACmB,OAAO,CAAC,OAAO,CAAAN,QAAA,CACvBJ,MAAM,CAACM,GAAG,CAAC,SAACS,KAAK,CAAEP,KAAK,qBACvBf,IAAA,CAACF,SAAS,CAACsB,IAAI,EAACV,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CACzCW,KAAK,EAD0CP,KAElC,CAAC,EAClB,CAAC,CACO,CAAC,CACD,CAAC,CACV,CAAC,cAEPf,IAAA,OAAIU,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,qBAAmB,CAAI,CAAC,cACpDX,IAAA,CAACH,IAAI,EAACa,SAAS,CAAC,kCAAkC,CAAAC,QAAA,cAChDX,IAAA,CAACH,IAAI,CAACmB,MAAM,EAAAL,QAAA,cACVX,IAAA,CAACF,SAAS,EAACmB,OAAO,CAAC,OAAO,CAAAN,QAAA,CACvBH,kBAAkB,CAACK,GAAG,CAAC,SAACU,MAAM,CAAER,KAAK,qBACpCf,IAAA,CAACF,SAAS,CAACsB,IAAI,EAACV,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CACzCY,MAAM,EADyCR,KAElC,CAAC,EAClB,CAAC,CACO,CAAC,CACD,CAAC,CACV,CAAC,EACJ,CAAC,CACH,CAAC,CACG,CAAC,CACT,CAAC,CAEV,CAEA,cAAe,CAAAN,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}