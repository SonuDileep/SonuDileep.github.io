{"ast":null,"code":"var _jsxFileName = \"/Users/mau5/Documents/Personal_Website/my-space/src/components/CV/CV.js\";\nimport React from 'react';\nimport '../../pages/style.css';\nimport { Container, Row, Col, Card, ListGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst workExperience = [{\n  title: 'Graduate Researcher - Computer Vision, Chevron, CO (August 2021 - Present)',\n  responsibilities: ['Computer Vision based oil and gas site monitoring system', 'Developed a Transformer based model to monitor the state of flare at oil and gas sites', 'Worked on data cleaning and annotation for training neural networks', 'Created a synthetic database using Unreal Engine which could emulate different flare conditions and weather', 'Find the Ringelmann number of smoke coming out of flare', 'Trained a Swin Transformer model to identify the state of flare, achieved 96% accuracy on test set']\n}\n// Continue with other work experiences in the same format\n// ...\n];\n\nconst education = ['PhD in Computer Science, Colorado State University (August 2021 - Present)', 'M.S. in Computer Engineering, Colorado State University (August 2018 - May 2021)', 'B.Tech. in Electronics and Communication Engineering, Amrita Institute of Technology (July 2013 - May 2017)'];\nconst skills = ['Technical Skills : 2D/3D Object Detection & Tracking, Segmentation, Feature Detection, 3D Reconstruction, Structure from Motion, SLAM, GANs', 'Programming Language : C++, Python, MATLAB, CUDA', 'Libraries : OpenCV, ROS, PyTorch, TensorFlow, NumPy, SciPy, Scikit-learn, Pandas, Matplotlib, Apache Spark, Hadoop', 'Other tools : Arduino, Raspberry Pi, PyQt, QGIS, RVIZ, Git, SVN, Unreal Engine', 'Professional Skills : Creativity, Critical Thinking, Problem Solving, Teamwork'];\nconst relevantCoursework = ['Machine Learning, Image Computation, Big Data, Natural Language Processing, Mathematical Modeling of Large Datasets,Optimization Methods, Machine learning & Adaptive Systems, Digital Image Processing, Introduction to Computer Graphics, Introduction to Robotic Programming, Digital Signal Processing, Software Engineering, Algorithms, Operating Systems'];\n\n// You can continue to add more sections in the same format\n\nfunction CVPage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"aboutmetext\",\n      children: \"Work Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), workExperience.map((job, index) => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"transparent-card mb-3 dynamicBox\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: job.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: job.responsibilities.map((responsibility, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          className: \"transparent-card\",\n          children: responsibility\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"aboutmetext\",\n      children: \"Education\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"transparent-card mb-3 dynamicBox\",\n      children: /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: education.map((edu, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            className: \"transparent-card\",\n            children: edu\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"aboutmetext\",\n      children: \"Skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"transparent-card mb-3 dynamicBox\",\n      children: /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: skills.map((skill, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            className: \"transparent-card\",\n            children: skill\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"aboutmetext\",\n      children: \"Relevant Coursework\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"transparent-card mb-3 dynamicBox\",\n      children: /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: relevantCoursework.map((course, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            className: \"transparent-card\",\n            children: course\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c = CVPage;\nexport default CVPage;\nvar _c;\n$RefreshReg$(_c, \"CVPage\");","map":{"version":3,"names":["React","Container","Row","Col","Card","ListGroup","jsxDEV","_jsxDEV","workExperience","title","responsibilities","education","skills","relevantCoursework","CVPage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","job","index","Header","variant","responsibility","idx","Item","edu","skill","course","_c","$RefreshReg$"],"sources":["/Users/mau5/Documents/Personal_Website/my-space/src/components/CV/CV.js"],"sourcesContent":["import React from 'react';\nimport '../../pages/style.css';\nimport { Container, Row, Col, Card, ListGroup } from 'react-bootstrap';\n\nconst workExperience = [\n  {\n    title: 'Graduate Researcher - Computer Vision, Chevron, CO (August 2021 - Present)',\n    responsibilities: [\n      'Computer Vision based oil and gas site monitoring system',\n      'Developed a Transformer based model to monitor the state of flare at oil and gas sites',\n      'Worked on data cleaning and annotation for training neural networks',\n      'Created a synthetic database using Unreal Engine which could emulate different flare conditions and weather',\n      'Find the Ringelmann number of smoke coming out of flare',\n      'Trained a Swin Transformer model to identify the state of flare, achieved 96% accuracy on test set'\n    ]\n  },\n  // Continue with other work experiences in the same format\n  // ...\n];\n\nconst education = [\n  'PhD in Computer Science, Colorado State University (August 2021 - Present)',\n  'M.S. in Computer Engineering, Colorado State University (August 2018 - May 2021)',\n  'B.Tech. in Electronics and Communication Engineering, Amrita Institute of Technology (July 2013 - May 2017)'\n];\n\nconst skills = [\n  'Technical Skills : 2D/3D Object Detection & Tracking, Segmentation, Feature Detection, 3D Reconstruction, Structure from Motion, SLAM, GANs',\n  'Programming Language : C++, Python, MATLAB, CUDA',\n  'Libraries : OpenCV, ROS, PyTorch, TensorFlow, NumPy, SciPy, Scikit-learn, Pandas, Matplotlib, Apache Spark, Hadoop',\n  'Other tools : Arduino, Raspberry Pi, PyQt, QGIS, RVIZ, Git, SVN, Unreal Engine',\n  'Professional Skills : Creativity, Critical Thinking, Problem Solving, Teamwork'\n];\n\nconst relevantCoursework = [\n  'Machine Learning, Image Computation, Big Data, Natural Language Processing, Mathematical Modeling of Large Datasets,Optimization Methods, Machine learning & Adaptive Systems, Digital Image Processing, Introduction to Computer Graphics, Introduction to Robotic Programming, Digital Signal Processing, Software Engineering, Algorithms, Operating Systems'\n];\n\n// You can continue to add more sections in the same format\n\nfunction CVPage() {\n  return (\n    <div>\n      <h3 className='aboutmetext'>Work Experience</h3>\n      {workExperience.map((job, index) => (\n        <Card className=\"transparent-card mb-3 dynamicBox\" key={index}>\n          <Card.Header>{job.title}</Card.Header>\n          <ListGroup variant=\"flush\">\n            {job.responsibilities.map((responsibility, idx) => (\n              <ListGroup.Item className=\"transparent-card\" key={idx}>\n                {responsibility}\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Card>\n      ))}\n\n      <h3 className='aboutmetext'>Education</h3>\n      <Card className=\"transparent-card mb-3 dynamicBox\">\n        <Card.Header>\n          <ListGroup variant=\"flush\">\n            {education.map((edu, index) => (\n              <ListGroup.Item className=\"transparent-card\" key={index}>\n                {edu}\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Card.Header>\n      </Card>\n\n      <h3 className='aboutmetext'>Skills</h3>\n      <Card className=\"transparent-card mb-3 dynamicBox\">\n        <Card.Header>\n          <ListGroup variant=\"flush\">\n            {skills.map((skill, index) => (\n              <ListGroup.Item className=\"transparent-card\" key={index}>\n                {skill}\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Card.Header>\n      </Card>\n\n      <h3 className='aboutmetext'>Relevant Coursework</h3>\n      <Card className=\"transparent-card mb-3 dynamicBox\">\n        <Card.Header>\n          <ListGroup variant=\"flush\">\n            {relevantCoursework.map((course, index) => (\n              <ListGroup.Item className=\"transparent-card\" key={index}>\n                {course}\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Card.Header>\n      </Card>\n    </div>\n  );\n}\n\nexport default CVPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}